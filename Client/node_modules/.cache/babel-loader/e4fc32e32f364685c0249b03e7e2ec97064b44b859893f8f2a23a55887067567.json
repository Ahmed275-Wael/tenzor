{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Projects\\\\Freelance\\\\tenzor\\\\Client\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./page-style/search.css\";\nimport { useLocation } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Product from \"../components/Product\";\nimport ProductSkeleton from \"../components/ProductSkeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [products, setProducts] = React.useState([]);\n  const [searchErr, setSearchErr] = React.useState(false);\n\n  // Get searched product\n  useEffect(() => {\n    const getProducts = async () => {\n      const res = await fetch(`http://localhost:3006/api/v1/product/search`, {\n        method: \"post\",\n        body: JSON.stringify({\n          name: state.data.name\n        }),\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      });\n      const data = await res.json();\n      console.log(data.data.length);\n      setProducts(data.data);\n      if (data.data.length === 0) {\n        setSearchErr(true);\n      } else {\n        setSearchErr(false);\n      }\n      setIsLoading(false);\n    };\n    getProducts();\n  }, [state.data.name]);\n  const productsArray = products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n    name: product.name,\n    id: product.id,\n    price: product.price\n  }, product.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [searchErr ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"No results for \", state.data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"You searched for \", state.data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: /*#__PURE__*/_jsxDEV(ProductSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: productsArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"vvWGc4hQ1U6y9Q6N2rbYtvs3QOE=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useLocation","Navbar","Footer","Product","ProductSkeleton","Search","state","isLoading","setIsLoading","useState","products","setProducts","searchErr","setSearchErr","getProducts","res","fetch","method","body","JSON","stringify","name","data","headers","json","console","log","length","productsArray","map","product","id","price"],"sources":["E:/Web Projects/Freelance/tenzor/Client/src/pages/Search.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./page-style/search.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Product from \"../components/Product\";\r\nimport ProductSkeleton from \"../components/ProductSkeleton\";\r\n\r\nexport default function Search() {\r\n  const { state } = useLocation();\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [products, setProducts] = React.useState([]);\r\n  const [searchErr, setSearchErr] = React.useState(false);\r\n\r\n  // Get searched product\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      const res = await fetch(`http://localhost:3006/api/v1/product/search`, {\r\n        method: \"post\",\r\n        body: JSON.stringify({ name: state.data.name }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      console.log(data.data.length);\r\n      setProducts(data.data);\r\n      if (data.data.length === 0) {\r\n        setSearchErr(true);\r\n      } else {\r\n        setSearchErr(false);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    getProducts();\r\n  }, [state.data.name]);\r\n\r\n  const productsArray = products.map((product) => (\r\n    <Product\r\n      key={product.id}\r\n      name={product.name}\r\n      id={product.id}\r\n      price={product.price}\r\n    />\r\n  ));\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        {searchErr ? (\r\n          <h1>No results for {state.data.name}</h1>\r\n        ) : (\r\n          <h1>You searched for {state.data.name}</h1>\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div className=\"products\">\r\n            <ProductSkeleton />\r\n          </div>\r\n        )}\r\n        <div className=\"products\">{productsArray}</div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,yBAAyB;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,eAAe,MAAM,+BAA+B;AAAC;AAAA;AAE5D,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM;IAAEC;EAAM,CAAC,GAAGN,WAAW,EAAE;EAC/B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGf,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAV,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,YAAY;MAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,6CAA4C,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEf,KAAK,CAACgB,IAAI,CAACD;QAAK,CAAC,CAAC;QAC/CE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMD,IAAI,GAAG,MAAMP,GAAG,CAACS,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACA,IAAI,CAACK,MAAM,CAAC;MAC7BhB,WAAW,CAACW,IAAI,CAACA,IAAI,CAAC;MACtB,IAAIA,IAAI,CAACA,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;QAC1Bd,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;MACrB;MACAL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDM,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,KAAK,CAACgB,IAAI,CAACD,IAAI,CAAC,CAAC;EAErB,MAAMO,aAAa,GAAGlB,QAAQ,CAACmB,GAAG,CAAEC,OAAO,iBACzC,QAAC,OAAO;IAEN,IAAI,EAAEA,OAAO,CAACT,IAAK;IACnB,EAAE,EAAES,OAAO,CAACC,EAAG;IACf,KAAK,EAAED,OAAO,CAACE;EAAM,GAHhBF,OAAO,CAACC,EAAE;IAAA;IAAA;IAAA;EAAA,QAKlB,CAAC;EACF,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,WAAW;MAAA,WACvBnB,SAAS,gBACR;QAAA,WAAI,iBAAe,EAACN,KAAK,CAACgB,IAAI,CAACD,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,gBAEzC;QAAA,WAAI,mBAAiB,EAACf,KAAK,CAACgB,IAAI,CAACD,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACtC,EAEAd,SAAS,iBACR;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAEtB,eACD;QAAK,SAAS,EAAC,UAAU;QAAA,UAAEqB;MAAa;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP;AAAC,GAzDuBvB,MAAM;EAAA,QACVL,WAAW;AAAA;AAAA,KADPK,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}