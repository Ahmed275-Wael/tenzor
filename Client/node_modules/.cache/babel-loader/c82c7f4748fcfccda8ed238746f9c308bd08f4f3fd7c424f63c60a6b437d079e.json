{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Projects\\\\Freelance\\\\tenzor\\\\Client\\\\src\\\\pages\\\\UploadProd.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./page-style/uploadprod.css\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadProd() {\n  _s();\n  const [uploadSuccess, setUploadSuccess] = useState(\"\");\n\n  //Get user data signed in from session storage\n  const userData = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  //Form Hook\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  async function onSubmit(data) {\n    let response = await fetch(\"http://localhost:3006/api/v1/product\", {\n      method: \"post\",\n      body: JSON.stringify({\n        ...data,\n        methodOfPayment: 0,\n        discount: 0,\n        userId: userData.id,\n        image: \"mazona\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UPLOAD YOUR PRODUCT HERE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"name\", {\n          required: {\n            value: true,\n            message: \"The name of the product is reqiured\"\n          }\n        }),\n        className: \"upload-name\",\n        type: \"text\",\n        placeholder: \"PRODUCT NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"image\"),\n        className: \"upload-image\",\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"price\", {\n          required: {\n            value: true,\n            message: \"Please enter a price\"\n          },\n          pattern: {\n            value: /^[0-9]+$/,\n            message: \"The price must be a number\"\n          }\n        }),\n        className: \"upload-price\",\n        type: \"text\",\n        placeholder: \"PRICE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), errors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ...register(\"description\"),\n        className: \"desc-upload\",\n        type: \"text\",\n        placeholder: \"Type ur description here plsss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadProd, \"k8zKYhm7aLUqqMFZn/fakEz5hPU=\", false, function () {\n  return [useForm];\n});\n_c = UploadProd;\nvar _c;\n$RefreshReg$(_c, \"UploadProd\");","map":{"version":3,"names":["React","useState","useForm","Navbar","Footer","UploadProd","uploadSuccess","setUploadSuccess","userData","JSON","parse","sessionStorage","getItem","register","handleSubmit","formState","errors","onSubmit","data","response","fetch","method","body","stringify","methodOfPayment","discount","userId","id","image","headers","result","json","console","log","required","value","message","name","email","pattern","price"],"sources":["E:/Web Projects/Freelance/tenzor/Client/src/pages/UploadProd.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./page-style/uploadprod.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nexport default function UploadProd() {\r\n  const [uploadSuccess, setUploadSuccess] = useState(\"\");\r\n\r\n  //Get user data signed in from session storage\r\n  const userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n  //Form Hook\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  async function onSubmit(data) {\r\n    let response = await fetch(\"http://localhost:3006/api/v1/product\", {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        ...data,\r\n        methodOfPayment: 0,\r\n        discount: 0,\r\n        userId: userData.id,\r\n        image: \"mazona\",\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n    });\r\n    const result = await response.json();\r\n    console.log(result);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form className=\"upload-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <h1>UPLOAD YOUR PRODUCT HERE</h1>\r\n        <input\r\n          {...register(\"name\", {\r\n            required: {\r\n              value: true,\r\n              message: \"The name of the product is reqiured\",\r\n            },\r\n          })}\r\n          className=\"upload-name\"\r\n          type=\"text\"\r\n          placeholder=\"PRODUCT NAME\"\r\n        />\r\n        {errors.name && <p className=\"error\">{errors.email.message}</p>}\r\n        <input {...register(\"image\")} className=\"upload-image\" type=\"file\" />\r\n        <input\r\n          {...register(\"price\", {\r\n            required: {\r\n              value: true,\r\n              message: \"Please enter a price\",\r\n            },\r\n            pattern: {\r\n              value: /^[0-9]+$/,\r\n              message: \"The price must be a number\",\r\n            },\r\n          })}\r\n          className=\"upload-price\"\r\n          type=\"text\"\r\n          placeholder=\"PRICE\"\r\n        />\r\n        {errors.price && <p className=\"error\">{errors.email.message}</p>}\r\n        {/* <input\r\n          {...register(\"methodOfPayment\")}\r\n          className=\"method-upload\"\r\n          type=\"text\"\r\n        /> */}\r\n        <textarea\r\n          {...register(\"description\")}\r\n          className=\"desc-upload\"\r\n          type=\"text\"\r\n          placeholder=\"Type ur description here plsss\"\r\n        />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}