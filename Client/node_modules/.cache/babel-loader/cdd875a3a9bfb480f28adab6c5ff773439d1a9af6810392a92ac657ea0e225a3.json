{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Projects\\\\Freelance\\\\tenzor\\\\Client\\\\src\\\\pages\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"./page-style/signup.css\";\nimport Navbar from \"../components/Navbar\";\n\n//ERRORS BS HYA ELL FADLA HNA DELETE WHEN COMPLETED\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm();\n  function onSubmit(data) {\n    // let result = await fetch(\"http://localhost:3006/api/v1/user/register\", {\n    //   method: \"post\",\n    //   body: JSON.stringify({ data }),\n    //   headers: {\n    //     \"Content-Type\": \"application/json; charset=utf-8\",\n    //   },\n    // });\n    // result = await result.json();\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signup-form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register a new account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...register(\"firstName\"),\n            type: \"text\",\n            placeholder: \"FIRST NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ...register(\"lastName\"),\n            type: \"text\",\n            placeholder: \"LAST NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gender-picture\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            ...register(\"gender\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ...register(\"image\"),\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"email\", {\n            pattern: {\n              value: /^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/,\n              message: \"Entered value does not match email format\"\n            }\n          }),\n          placeholder: \"EMAIL\",\n          accept: \"image/png, image/gif, image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"phoneNumber\", {\n            pattern: {\n              value: /^01[0125][0-9]{8}$/gm,\n              message: \"Entered value does not match egyptian number format\"\n            }\n          }),\n          type: \"text\",\n          placeholder: \"PHONE NUMBER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), errors.phoneNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.phoneNumber.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"password\", {\n            pattern: {\n              value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n              //Minimum eight characters, at least one letter and one number\n              message: \"Password must contain a minimum of eight characters, at least one letter and one number\"\n            }\n          }),\n          type: \"password\",\n          placeholder: \"PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"confirm_password\", {\n            required: true,\n            validate: val => {\n              if (watch(\"password\") !== val) {\n                setErrorMsg(\"Your passwords do no match\");\n              } else setErrorMsg(\"\");\n            }\n          }),\n          type: \"password\",\n          placeholder: \"CONFIRM PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Resgiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sign-in-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Already registered?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login now and welcome back!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SignUp, \"JAymSvo3+vVUh8QNlqIgGZTY4O4=\", false, function () {\n  return [useForm];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","Link","useForm","Navbar","SignUp","errorMsg","setErrorMsg","useState","register","handleSubmit","formState","errors","watch","onSubmit","data","console","log","pattern","value","message","email","phoneNumber","password","required","validate","val"],"sources":["E:/Web Projects/Freelance/tenzor/Client/src/pages/SignUp.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./page-style/signup.css\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n//ERRORS BS HYA ELL FADLA HNA DELETE WHEN COMPLETED\r\n\r\nexport default function SignUp() {\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm();\r\n\r\n  function onSubmit(data) {\r\n    // let result = await fetch(\"http://localhost:3006/api/v1/user/register\", {\r\n    //   method: \"post\",\r\n    //   body: JSON.stringify({ data }),\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json; charset=utf-8\",\r\n    //   },\r\n    // });\r\n    // result = await result.json();\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"sign-up\">\r\n        <form className=\"signup-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <h1>Register a new account.</h1>\r\n          <div className=\"name-inputs\">\r\n            {/* comment */}\r\n            <input\r\n              {...register(\"firstName\")}\r\n              type=\"text\"\r\n              placeholder=\"FIRST NAME\"\r\n            />\r\n            <input\r\n              {...register(\"lastName\")}\r\n              type=\"text\"\r\n              placeholder=\"LAST NAME\"\r\n            />\r\n          </div>\r\n          <div className=\"gender-picture\">\r\n            <select {...register(\"gender\")}>\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n            <input {...register(\"image\")} type=\"file\" />\r\n          </div>\r\n          <input\r\n            {...register(\"email\", {\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/,\r\n                message: \"Entered value does not match email format\",\r\n              },\r\n            })}\r\n            placeholder=\"EMAIL\"\r\n            accept=\"image/png, image/gif, image/jpeg\"\r\n          />\r\n          {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n          <input\r\n            {...register(\"phoneNumber\", {\r\n              pattern: {\r\n                value: /^01[0125][0-9]{8}$/gm,\r\n                message: \"Entered value does not match egyptian number format\",\r\n              },\r\n            })}\r\n            type=\"text\"\r\n            placeholder=\"PHONE NUMBER\"\r\n          />\r\n          {errors.phoneNumber && (\r\n            <p className=\"error\">{errors.phoneNumber.message}</p>\r\n          )}\r\n          <input\r\n            {...register(\"password\", {\r\n              pattern: {\r\n                value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\r\n                //Minimum eight characters, at least one letter and one number\r\n                message:\r\n                  \"Password must contain a minimum of eight characters, at least one letter and one number\",\r\n              },\r\n            })}\r\n            type=\"password\"\r\n            placeholder=\"PASSWORD\"\r\n          />\r\n          {errors.password && (\r\n            <p className=\"error\">{errors.password.message}</p>\r\n          )}\r\n          <input\r\n            {...register(\"confirm_password\", {\r\n              required: true,\r\n              validate: (val) => {\r\n                if (watch(\"password\") !== val) {\r\n                  setErrorMsg(\"Your passwords do no match\");\r\n                } else setErrorMsg(\"\");\r\n              },\r\n            })}\r\n            type=\"password\"\r\n            placeholder=\"CONFIRM PASSWORD\"\r\n          />\r\n          <p className=\"error\">{errorMsg}</p>\r\n          <button onClick={handleSubmit}>Resgiter</button>\r\n          {/* comment */}\r\n        </form>\r\n        <div className=\"sign-in-img\">\r\n          <h1>Already registered?</h1>\r\n          <p>Login now and welcome back!</p>\r\n          <Link to=\"/signin\">Login</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}